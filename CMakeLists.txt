CMAKE_MINIMUM_REQUIRED(VERSION 3.1.3)

PROJECT(go-i3s C CXX)

# Set build type
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Release CACHE STRING
      "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
      FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

OPTION(FLYWAVE_ENABLE_SOLUTION_FOLDERS "Build with UBSAN" ON)

if(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
  SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
  SET_PROPERTY(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "CMakeTargets")
endif()

# Unix specific options
IF(UNIX OR APPLE)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall")
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -Wall")
ENDIF()

# CXX_STANDARD
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX17_STANDARD_COMPILE_OPTION "-std=c++17")
set(CMAKE_CXX_STANDARD_REQUIRED ON)

IF(UNIX)
IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
ENDIF()
ENDIF()
 
# Set output directories
SET(FLYWAVE_LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)

MAKE_DIRECTORY(${FLYWAVE_LIBRARY_OUTPUT_PATH})

SET(FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}")
SET(FLYWAVE_LIBRARY_DIRS "")

OPTION(NO_ETC2_SUPPORT "Disable ETC2 support.")

# libjpeg
IF(NOT JPEG_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/libjpeg")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libjpeg")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libjpeg")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libjpeg/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "jpeg")

  SET(JPEG_INCLUDE YES)
ENDIF()

# libpng
IF(NOT PNG_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/libpng")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libpng")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libpng/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "png")

  SET(PNG_INCLUDE YES)
ENDIF()

# zlib
IF(NOT ZLIB_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/zlib")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/zlib/")
  
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/zlib/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "zlib")

  SET(ZLIB_INCLUDE YES)
ENDIF()

# lerc
IF(NOT LERC_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/include/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/src/LercLib")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/lerc/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "lerc")

  SET(LERC_INCLUDE YES)
ENDIF()

# robin-map
IF(NOT ROBIN_MAP_INCLUDE)
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/robin-map/include/")
  SET(ROBIN_MAP_INCLUDE YES)
ENDIF()

# lz4
IF(NOT LZ4_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/lz4")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/lz4/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/lz4/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "lz4")

  SET(LZ4_INCLUDE YES)
ENDIF()

# zstd
IF(NOT ZSTD_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/zstd")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/zstd/lib/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/zstd/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "zstd")

  SET(ZSTD_INCLUDE YES)
ENDIF()

# c-blosc
IF(NOT BLOSC_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/c-blosc/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/c-blosc/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/c-blosc/blosc/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "blosc")

  SET(BLOSC_INCLUDE YES)
ENDIF()

# skylight
IF(NOT SKYLIGHT_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/skylight/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/skylight/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/skylight/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "skylight")

  SET(SKYLIGHT_INCLUDE YES)
ENDIF()

# xatlas
IF(NOT XATLAS_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/xatlas/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/xatlas/src")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/xatlas/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "xatlas")

  SET(XATLAS_INCLUDE YES)
ENDIF()

# tbb
IF(NOT TBB_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/tbb/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/tbb/include/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/tbb/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "tbb" "tbbmalloc" "tbbmalloc_proxy")

  SET(TBB_INCLUDE YES)
ENDIF()

# openvdb
IF(NOT VDB_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/openvdb/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/openvdb/openvdb/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/openvdb/openvdb/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/openvdb/openvdb/openvdb/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/openvdb/openvdb/openvdb/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "openvdb")

  SET(VDB_INCLUDE YES)
ENDIF()

# libtiff
IF(NOT TIFF_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/libtiff/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libtiff/src")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libtiff/port/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libtiff/src")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libtiff/port/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libtiff/src/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "tiff")

  SET(TIFF_INCLUDE YES)
ENDIF()

# ceres-solver
IF(NOT CERES_SOLVER_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/ceres-solver/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/ceres-solver/include/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/ceres-solver/config/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/ceres-solver/internal/ceres/miniglog")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/ceres-solver/internal/ceres/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "ceres")

  SET(CERES_SOLVER_INCLUDE YES)
ENDIF()

# suitesparse
IF(NOT SUITSPARSE_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/CHOLMOD/Include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/CCOLAMD/Include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/CAMD/Include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/COLAMD/Include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/AMD/Include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/metis-5.1.0/include")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/SuiteSparse_config/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/suitesparse/SPQR/Include/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/CHOLMOD/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/CCOLAMD/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/CAMD/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/COLAMD/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/AMD/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/metis-5.1.0/libmetis/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/metis-5.1.0/GKlib/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/SuiteSparse_config/")
  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/suitesparse/SPQR/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "amd" "amd_l" "camd" "camd_l" "ccolamd" "ccolamd_l" "cholmod" "cholmod_l" "colamd" "colamd_l" "metis" "SuiteSparse_config" "spqr" "GKlib")
  
  SET(SUITSPARSE_INCLUDE YES)
ENDIF()

# bin_packer
IF(NOT BIN_PACKER_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/bin_packer")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/bin_packer/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/bin_packer/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "bin_packer")

  SET(BIN_PACKER_INCLUDE YES)
ENDIF()

# embree
IF(NOT EMBREE_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/embree")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/embree/include/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/embree/include/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/embree/include/embree3/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/embree/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "embree" "lexers" "math" "simd" "sys" "tasking")

  SET(EMBREE_INCLUDE YES)
ENDIF()

# nanoflann
IF(NOT NANOFLANN_INCLUDE)
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/nanoflann/include/")
  SET(NANOFLANN_INCLUDE YES)
ENDIF()

# lerc
IF(NOT LERC_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/include/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/lerc/src/LercLib")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/lerc/")
  
  LIST(APPEND FLYWAVE_LIBRARY_DEPES "lerc")
  
  SET(LERC_INCLUDE YES)
ENDIF()

# icu
IF(NOT ICU_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/icu")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/icu/source/common/")
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/icu/source/i18n/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/icu/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "icudata" "icui18n" "icuuc" "icudt")
  
  SET(ICU_INCLUDE YES)
ENDIF()

# xml2
IF(NOT XML2_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/libxml")
  IF (WIN32)
    LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/win32
                                      ${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/win32/include")
  ENDIF()

  IF(UNIX)
  IF(APPLE)
    LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/mac
                                      ${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/mac/include")
  ELSE()
    LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/linux
                                      ${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/linux/include")
  ENDIF()
  ENDIF()
  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/libxml/src/include/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/libxml/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "xml2")

  SET(XML2_INCLUDE YES)
ENDIF()
 
# vcglib
IF(NOT VCGLIB_INCLUDE)
  ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/external/vcglib")

  LIST(APPEND FLYWAVE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/external/vcglib/")

  LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/external/vcglib/")

  LIST(APPEND FLYWAVE_LIBRARY_DEPES "plylib")

  SET(VCGLIB_INCLUDE YES)
ENDIF()

LIST(APPEND FLYWAVE_LIBRARY_DIRS "${CMAKE_CURRENT_BINARY_DIR}/src/")

ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/src")

foreach(LIBDIR ${FLYWAVE_LIBRARY_DIRS})
  INSTALL(
        DIRECTORY ${LIBDIR}
        DESTINATION ${FLYWAVE_LIBRARY_OUTPUT_PATH}
        USE_SOURCE_PERMISSIONS FILE_PERMISSIONS
        FILES_MATCHING PATTERN "*.a"
        )
  endforeach()

INSTALL(
    DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src/"
    DESTINATION ${FLYWAVE_LIBRARY_OUTPUT_PATH}
    USE_SOURCE_PERMISSIONS FILE_PERMISSIONS
    FILES_MATCHING PATTERN "*.h"
    )